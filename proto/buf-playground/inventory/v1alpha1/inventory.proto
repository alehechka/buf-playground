syntax = "proto3";

package inventory.v1alpha1;

import "google/api/annotations.proto";
import "google/type/money.proto";
import "graphql/v1/graphql.proto";
import "payment/v1alpha1/payment.proto";

message Item {
    string item_id = 1 [json_name = "itemID"];
    string name = 2;
    float weight = 3;
    float height = 4;
    float quantity = 5;
    google.type.Money price = 6;
}

message GetItemRequest {
    string item_id = 1 [json_name = "itemID", (graphql.v1.field) = {required: true}];
}

message GetItemResponse {
    Item item = 1 [(graphql.v1.field) = {required: true}];
}

message CreateItemRequest {
    Item item = 1 [(graphql.v1.field) = {required: true}];
}

message CreateItemResponse {
    Item item = 1 [(graphql.v1.field) = {required: true}];
}

message UpdateItemRequest {
    string item_id = 1 [json_name = "itemID", (graphql.v1.field) = {required: true}];
    Item item = 2 [(graphql.v1.field) = {required: true}];
}

message UpdateItemResponse {
    Item item = 1 [(graphql.v1.field) = {required: true}];
}

message DeleteItemRequest {
    string item_id = 1 [json_name = "itemID", (graphql.v1.field) = {required: true}];
}

message DeleteItemResponse {}

message ListItemsRequest {}

message ListItemsResponse {
    repeated Item items = 1 [(graphql.v1.field) = {required: true}];
}

message PurchaseItemRequest {
    payment.v1alpha1.Purchase purchase = 1;
}

message PurchaseItemResponse {
    payment.v1alpha1.Receipt receipt = 1;
}

service InventoryService {
    rpc GetItem(GetItemRequest) returns (GetItemResponse) {
        option (google.api.http) = {
            get: "/api/v1alpha1/inventory/items/{item_id}"
        };
        option (graphql.v1.schema) = {
            type: QUERY
            name: "getItem"
        };
    }

    rpc CreateItem(CreateItemRequest) returns (CreateItemResponse) {
        option (google.api.http) = {
            post: "/api/v1alpha1/inventory/items"
            body: "item"
        };
        option (graphql.v1.schema) = {
            type: MUTATION
            name: "createItem"
        };
    }

    rpc UpdateItem(UpdateItemRequest) returns (UpdateItemResponse) {
        option (google.api.http) = {
            put: "/api/v1alpha1/inventory/items/{item_id}"
            body: "item"
        };
        option (graphql.v1.schema) = {
            type: MUTATION
            name: "updateItem"
        };
    }

    rpc DeleteItem(DeleteItemRequest) returns (DeleteItemResponse) {
        option (google.api.http) = {
            delete: "/api/v1alpha1/inventory/items/{item_id}"
        };
        option (graphql.v1.schema) = {
            type: MUTATION
            name: "deleteItem"
        };
    }

    rpc ListItems(ListItemsRequest) returns (ListItemsResponse) {
        option (google.api.http) = {
            get: "/api/v1alpha1/inventory/items"
        };
        option (graphql.v1.schema) = {
            type: QUERY
            name: "listItems"
        };
    }
}