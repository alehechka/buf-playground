syntax = "proto3";

package session.v1alpha1;

import "google/api/annotations.proto";
import "google/type/date.proto";
import "graphql/v1/graphql.proto";

enum Gender {
    GENDER_UNSPECIFIED = 0;
    GENDER_MALE = 1;
    GENDER_FEMALE = 2;
}

message User {
    string user_id = 1 [json_name = "userID"];
    string first_name = 2 [(graphql.field) = {required: true}];
    string last_name = 3 [(graphql.field) = {required: true}];
    Gender gender = 5;
     // google.type.Date birthday = 4;
}

message GetUserRequest {
    string user_id = 1 [json_name = "userID", (graphql.field) = {required: true}];
}

message GetUserResponse {
    User user = 1 [(graphql.field) = {required: true}];
}

service SessionService {
    rpc GetUser(GetUserRequest) returns (GetUserResponse) {
        option (google.api.http) = {
            get: "/api/v1alpha1/session/users/{user_id}"
        };
        option (graphql.schema) = {
            type: QUERY
            name: "getUser"
          };
    }
}