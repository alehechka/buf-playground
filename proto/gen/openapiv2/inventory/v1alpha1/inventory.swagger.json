{
  "swagger": "2.0",
  "info": {
    "title": "inventory/v1alpha1/inventory.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "InventoryService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1alpha1/inventory/items": {
      "get": {
        "operationId": "InventoryService_ListItems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ListItemsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "InventoryService"
        ]
      },
      "post": {
        "operationId": "InventoryService_CreateItem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1CreateItemResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "item",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1Item"
            }
          }
        ],
        "tags": [
          "InventoryService"
        ]
      }
    },
    "/api/v1alpha1/inventory/items/{itemID}": {
      "get": {
        "operationId": "InventoryService_GetItem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetItemResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "itemID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "InventoryService"
        ]
      },
      "delete": {
        "operationId": "InventoryService_DeleteItem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1DeleteItemResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "itemID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "InventoryService"
        ]
      },
      "put": {
        "operationId": "InventoryService_UpdateItem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1UpdateItemResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "itemID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "item",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1Item"
            }
          }
        ],
        "tags": [
          "InventoryService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "typeMoney": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string",
          "description": "The three-letter currency code defined in ISO 4217."
        },
        "units": {
          "type": "string",
          "format": "int64",
          "description": "The whole units of the amount.\nFor example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Number of nano (10^-9) units of the amount.\nThe value must be between -999,999,999 and +999,999,999 inclusive.\nIf `units` is positive, `nanos` must be positive or zero.\nIf `units` is zero, `nanos` can be positive, zero, or negative.\nIf `units` is negative, `nanos` must be negative or zero.\nFor example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
        }
      },
      "description": "Represents an amount of money with its currency type."
    },
    "v1alpha1CreateItemResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/v1alpha1Item"
        }
      }
    },
    "v1alpha1DeleteItemResponse": {
      "type": "object"
    },
    "v1alpha1GetItemResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/v1alpha1Item"
        }
      }
    },
    "v1alpha1Item": {
      "type": "object",
      "properties": {
        "itemID": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "weight": {
          "type": "number",
          "format": "float"
        },
        "height": {
          "type": "number",
          "format": "float"
        },
        "quantity": {
          "type": "number",
          "format": "float"
        },
        "price": {
          "$ref": "#/definitions/typeMoney"
        }
      }
    },
    "v1alpha1ListItemsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Item"
          }
        }
      }
    },
    "v1alpha1UpdateItemResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/v1alpha1Item"
        }
      }
    }
  }
}
