version: '3.8'

services:
  # Database
  mongo:
    image: mongo
    restart: always
    container_name: mongodb
    networks:
      - database

  # Gateways
  rest-gateway:
    build:
      dockerfile: Dockerfile.local
    container_name: rest-gateway
    command: gin -i --build $REST_DIR --bin $REST_DIR/gin-bin run
    depends_on:
      - inventory-api
      - session-api
    networks:
      - backend
    ports:
      - $REST_PORT:3001
    environment:
      OTEL_SERVICE_NAME: $REST_DIR
    volumes:
      - .:/app

  graphql-gateway:
    build:
      dockerfile: Dockerfile.local
    container_name: graphql-gateway
    command: gin -i --build $GRAPHQL_DIR --bin $GRAPHQL_DIR/gin-bin run
    depends_on:
      - inventory-api
      - session-api
    networks:
      - backend
    ports:
      - $GRAPHQL_PORT:3001
    environment:
      OTEL_SERVICE_NAME: $GRAPHQL_DIR
    volumes:
      - .:/app

  # gRPC Services
  inventory-api:
    build:
      dockerfile: Dockerfile.local
    container_name: inventory-api
    command: gin -i --build $INVENTORY_DIR --bin $INVENTORY_DIR/gin-bin -a $PORT run
    depends_on:
      - mongo
    networks:
      - backend
      - database
    environment:
      OTEL_SERVICE_NAME: $INVENTORY_DIR
    volumes:
      - .:/app

  session-api:
    build:
      dockerfile: Dockerfile.local
    container_name: session-api
    command: gin -i --build $SESSION_DIR --bin $SESSION_DIR/gin-bin -a $PORT run
    depends_on:
      - mongo
    networks:
      - backend
      - database
    environment:
      OTEL_SERVICE_NAME: $SESSION_DIR
    volumes:
      - .:/app

  # Collectors
  otel-collector:
    image: otel/opentelemetry-collector
    container_name: otel-collector
    command: ['--config=/etc/otel-collector-config.yaml']
    networks:
      - backend
    env_file:
      - .secret.env
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    # ports:
    #   - '1888:1888' # pprof extension
    #   - '8888:8888' # Prometheus metrics exposed by the collector
    #   - '8889:8889' # Prometheus exporter metrics
    #   - '13133:13133' # health_check extension
    #   - '4317:4317' # OTLP gRPC receiver
    #   - '4318:4318' # OTLP http receiver
    #   - '55679:55679' # zpages extension

  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   networks:
  #     - backend

networks:
  backend:
    driver: bridge
  database:
    driver: bridge
